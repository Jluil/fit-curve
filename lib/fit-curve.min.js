/*
  JavaScript implementation of
  Algorithm for Automatically Fitting Digitized Curves
  by Philip J. Schneider
  "Graphics Gems", Academic Press, 1990

  The MIT License (MIT)

  https://github.com/soswow/fit-curves
*/
var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(e,b,f){e!=Array.prototype&&e!=Object.prototype&&(e[b]=f.value)};$jscomp.getGlobal=function(e){return"undefined"!=typeof window&&window===e?e:"undefined"!=typeof global&&null!=global?global:e};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(e,b,f,v){if(b){f=$jscomp.global;e=e.split(".");for(v=0;v<e.length-1;v++){var h=e[v];h in f||(f[h]={});f=f[h]}e=e[e.length-1];v=f[e];b=b(v);b!=v&&null!=b&&$jscomp.defineProperty(f,e,{configurable:!0,writable:!0,value:b})}};
$jscomp.polyfill("Math.hypot",function(e){return e?e:function(e,f,v){e=Number(e);f=Number(f);var h,b=Math.max(Math.abs(e),Math.abs(f));for(h=2;h<arguments.length;h++)b=Math.max(b,Math.abs(arguments[h]));if(1E100<b||1E-100>b){if(!b)return b;e/=b;f/=b;var w=e*e+f*f;for(h=2;h<arguments.length;h++){var a=Number(arguments[h])/b;w+=a*a}return Math.sqrt(w)*b}w=e*e+f*f;for(h=2;h<arguments.length;h++)a=Number(arguments[h]),w+=a*a;return Math.sqrt(w)}},"es6","es3");
(function(e,b){if("function"===typeof define&&define.amd)define(["module"],b);else if("undefined"!==typeof exports)b(module);else{var f={exports:{}};b(f);e.fitCurve=f.exports}})(this,function(e){function b(a,q){if(!(a instanceof q))throw new TypeError("Cannot call a class as a function");}function f(d,q,c,g,r){var e;if(2===d.length){g=a.vectorLen(a.subtract(d[0],d[1]))/3;var k=[d[0],a.addArrays(d[0],a.mulItems(q,g)),a.addArrays(d[1],a.mulItems(c,g)),d[1]];return[k]}var l=B(d);var n=v(d,l,l,q,c,r);
k=n[0];var b=n[1];n=n[2];if(b<g)return[k];if(b<g*g){var z=l;var y=b;var A=n;for(e=0;20>e;e++){z=h(k,d,z);n=v(d,l,z,q,c,r);k=n[0];b=n[1];n=n[2];if(b<g)return[k];if(n===A&&(y=b/y,.9999<y&&1.0001>y))break;y=b;A=n}}k=[];l=a.subtract(d[n-1],d[n+1]);0===l[0]&&0===l[1]&&(l=a.subtract(d[n-1],d[n]),b=[-l[1],l[0]],l[0]=b[0],l[1]=b[1]);l=a.normalize(l);b=a.mulItems(l,-1);k=k.concat(f(d.slice(0,n+1),q,l,g,r));return k=k.concat(f(d.slice(n),b,c,g,r))}function v(d,q,c,g,b,e){var k,l=d[0],n=d[d.length-1];var f=
[l,null,null,n];var r=a.zeros_Xx2x2(c.length);var u=0;for(k=c.length;u<k;u++){var h=c[u];var m=1-h;var t=r[u];t[0]=a.mulItems(g,3*h*m*m);t[1]=a.mulItems(b,3*m*h*h)}m=[[0,0],[0,0]];var p=[0,0];u=0;for(k=d.length;u<k;u++)h=c[u],t=r[u],m[0][0]+=a.dot(t[0],t[0]),m[0][1]+=a.dot(t[0],t[1]),m[1][0]+=a.dot(t[0],t[1]),m[1][1]+=a.dot(t[1],t[1]),h=a.subtract(d[u],x.q([l,l,n,n],h)),p[0]+=a.dot(t[0],h),p[1]+=a.dot(t[1],h);c=m[0][0]*m[1][1]-m[1][0]*m[0][1];r=m[0][0]*p[1]-m[1][0]*p[0];m=p[0]*m[1][1]-p[1]*m[0][1];
m=0===c?0:m/c;p=0===c?0:r/c;r=a.vectorLen(a.subtract(l,n));c=1E-6*r;m<c||p<c?(f[1]=a.addArrays(l,a.mulItems(g,r/3)),f[2]=a.addArrays(n,a.mulItems(b,r/3))):(f[1]=a.addArrays(l,a.mulItems(g,m)),f[2]=a.addArrays(n,a.mulItems(b,p)));g=0;b=d.length/2;m=w(f,10);l=0;for(n=d.length;l<n;l++){p=d[l];r=void 0;c=q[l];if(0>c)c=0;else if(1<c)c=1;else{for(k=1;10>=k;k++)if(c<=m[k]){r=(k-1)/10;t=k/10;u=m[k-1];k=m[k];r=(c-u)/(k-u)*(t-r)+r;break}c=r}p=a.subtract(x.q(f,c),p);p=p[0]*p[0]+p[1]*p[1];p>g&&(g=p,b=l)}b=[g,
b];g=b[0];b=b[1];e&&e({bez:f,points:d,params:q,maxErr:g,maxPoint:b});return[f,g,b]}function h(d,q,c){return c.map(function(c,b){b=q[b];var g=a.subtract(x.q(d,c),b),e=x.qprime(d,c);b=a.mulMatrix(g,e);g=a.sum(a.squareItems(e))+2*a.mulMatrix(g,x.qprimeprime(d,c));return 0===g?c:c-b/g})}function B(d){var q=[],c,g,b;d.forEach(function(d,e){c=e?g+a.vectorLen(a.subtract(d,b)):0;q.push(c);g=c;b=d});return q=q.map(function(c){return c/g})}var w=function(d,q){for(var c,g=[0],b=d[0],e=0,k=1;k<=q;k++)c=x.q(d,
k/q),e+=a.vectorLen(a.subtract(c,b)),g.push(e),b=c;return g=g.map(function(c){return c/e})},a=function(){function a(){b(this,a)}a.zeros_Xx2x2=function(a){for(var c=[];a--;)c.push([0,0]);return c};a.mulItems=function(a,c){return a.map(function(a){return a*c})};a.mulMatrix=function(a,c){return a[0]*c[0]+a[1]*c[1]};a.subtract=function(a,c){return a.map(function(a,b){return a-c[b]})};a.addArrays=function(a,c){return[a[0]+c[0],a[1]+c[1]]};a.addItems=function(a,c){return a.map(function(a){return a+c})};
a.sum=function(a){return a.reduce(function(a,b){return a+b})};a.dot=function(b,c){return a.mulMatrix(b,c)};a.vectorLen=function(a){return Math.hypot.apply(Math,a)};a.divItems=function(a,c){return a.map(function(a){return a/c})};a.squareItems=function(a){return a.map(function(a){return a*a})};a.normalize=function(a){return this.divItems(a,this.vectorLen(a))};return a}(),x=function(){function d(){b(this,d)}d.q=function(b,c){var d=1-c,e=a.mulItems(b[0],d*d*d),q=a.mulItems(b[1],3*d*d*c);d=a.mulItems(b[2],
3*d*c*c);b=a.mulItems(b[3],c*c*c);return a.addArrays(a.addArrays(e,q),a.addArrays(d,b))};d.qprime=function(b,c){var d=1-c,e=a.mulItems(a.subtract(b[1],b[0]),3*d*d);d=a.mulItems(a.subtract(b[2],b[1]),6*d*c);b=a.mulItems(a.subtract(b[3],b[2]),3*c*c);return a.addArrays(a.addArrays(e,d),b)};d.qprimeprime=function(b,c){return a.addArrays(a.mulItems(a.addArrays(a.subtract(b[2],a.mulItems(b[1],2)),b[0]),6*(1-c)),a.mulItems(a.addArrays(a.subtract(b[3],a.mulItems(b[2],2)),b[1]),6*c))};return d}();e.exports=
function(b,e,c){if(!Array.isArray(b))throw new TypeError("First argument should be an array");b.forEach(function(a){if(!Array.isArray(a)||a.some(function(a){return"number"!==typeof a})||a.length!==b[0].length)throw Error("Each point should be an array of numbers. Each point should have the same amount of numbers.");});b=b.filter(function(a,c){return 0===c||!a.every(function(a,d){return a===b[c-1][d]})});if(2>b.length)return[];var d=b.length,h=a.normalize(a.subtract(b[1],b[0]));d=a.normalize(a.subtract(b[d-
2],b[d-1]));return f(b,h,d,e,c)}});
